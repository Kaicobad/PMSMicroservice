// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pms360.Infrastructure.Data;

#nullable disable

namespace Pms360.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250702043304_AddedUnitIdInEvaluationCriteria")]
    partial class AddedUnitIdInEvaluationCriteria
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pms360.Domain.Entities.AssessorType", b =>
                {
                    b.Property<Guid>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("TypeId");

                    b.ToTable("AssessorTypes");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.CriteriaScale", b =>
                {
                    b.Property<Guid>("ScaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CriteriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeletedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScoreValue")
                        .HasColumnType("int");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("ScaleId");

                    b.HasIndex("CriteriaId");

                    b.ToTable("CriteriaScales");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.EvaluationCriteria", b =>
                {
                    b.Property<Guid>("CriteriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("CriteriaId");

                    b.ToTable("EvaluationCriteria");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.EvaluationResponse", b =>
                {
                    b.Property<int>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResponseId"));

                    b.Property<Guid>("AssessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CriteriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeletedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("ResponseId");

                    b.HasIndex("AssessorId");

                    b.HasIndex("CriteriaId");

                    b.ToTable("EvaluationResponses");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.EvaluationSummary", b =>
                {
                    b.Property<Guid>("SummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AverageScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CycleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeletedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("EmpId")
                        .HasColumnType("bigint");

                    b.Property<string>("FinalComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FinalRatingPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FinalizedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("FinalizedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("SummaryId");

                    b.HasIndex("CycleId");

                    b.ToTable("EvaluationSummaries");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.PMSAssessor", b =>
                {
                    b.Property<Guid>("AssessorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("AssessorEmpId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("AssessorTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CycleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeletedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("AssessorId");

                    b.HasIndex("AssessorTypeId");

                    b.HasIndex("CycleId");

                    b.ToTable("PMSAssessors");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.PMSAssessorDetails", b =>
                {
                    b.Property<Guid>("AssessorDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CycleDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AssessorDetailsId");

                    b.HasIndex("AssessorId");

                    b.HasIndex("CycleDetailsId");

                    b.ToTable("PMSAssessorDetails");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.PMSCycle", b =>
                {
                    b.Property<Guid>("CycleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PMSDurationTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PMSTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("CycleId");

                    b.HasIndex("PMSDurationTypeId");

                    b.HasIndex("PMSTypeId");

                    b.ToTable("PMSCycles");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.PMSCycleDetails", b =>
                {
                    b.Property<Guid>("CycleDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CycleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeletedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("EmpId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PMSAssessorAssessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("CycleDetailsId");

                    b.HasIndex("CycleId");

                    b.HasIndex("PMSAssessorAssessorId");

                    b.ToTable("PMSCycleDetails");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.PMSCycleDetailsWithCriteriaMapping", b =>
                {
                    b.Property<Guid>("CycleDetailsCriteriaMappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CriteriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CycleDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CycleDetailsCriteriaMappingId");

                    b.HasIndex("CriteriaId");

                    b.HasIndex("CycleDetailsId");

                    b.ToTable("PMSCycleDetailsWithCriteriaMappings");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.PMSDurationType", b =>
                {
                    b.Property<Guid>("DurationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("DurationTypeId");

                    b.ToTable("PMSDurationTypes");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.PMSType", b =>
                {
                    b.Property<Guid>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("TypeId");

                    b.ToTable("PMSTypes");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.CriteriaScale", b =>
                {
                    b.HasOne("Pms360.Domain.Entities.EvaluationCriteria", "EvaluationCriteria")
                        .WithMany("CriteriaScales")
                        .HasForeignKey("CriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EvaluationCriteria");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.EvaluationResponse", b =>
                {
                    b.HasOne("Pms360.Domain.Entities.PMSAssessor", "Assessor")
                        .WithMany("EvaluationResponses")
                        .HasForeignKey("AssessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pms360.Domain.Entities.EvaluationCriteria", "Criteria")
                        .WithMany("Responses")
                        .HasForeignKey("CriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assessor");

                    b.Navigation("Criteria");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.EvaluationSummary", b =>
                {
                    b.HasOne("Pms360.Domain.Entities.PMSCycle", "Cycle")
                        .WithMany("EvaluationSummaries")
                        .HasForeignKey("CycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cycle");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.PMSAssessor", b =>
                {
                    b.HasOne("Pms360.Domain.Entities.AssessorType", "AssessorType")
                        .WithMany("PMSAssessors")
                        .HasForeignKey("AssessorTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pms360.Domain.Entities.PMSCycle", "Cycle")
                        .WithMany("Assessors")
                        .HasForeignKey("CycleId");

                    b.Navigation("AssessorType");

                    b.Navigation("Cycle");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.PMSAssessorDetails", b =>
                {
                    b.HasOne("Pms360.Domain.Entities.PMSAssessor", "Assessor")
                        .WithMany()
                        .HasForeignKey("AssessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pms360.Domain.Entities.PMSCycleDetails", "CycleDetails")
                        .WithMany("PMSAssessorDetails")
                        .HasForeignKey("CycleDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assessor");

                    b.Navigation("CycleDetails");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.PMSCycle", b =>
                {
                    b.HasOne("Pms360.Domain.Entities.PMSDurationType", "PMSDurationType")
                        .WithMany("PMSCycles")
                        .HasForeignKey("PMSDurationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pms360.Domain.Entities.PMSType", "PMSType")
                        .WithMany("PMSCycles")
                        .HasForeignKey("PMSTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PMSDurationType");

                    b.Navigation("PMSType");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.PMSCycleDetails", b =>
                {
                    b.HasOne("Pms360.Domain.Entities.PMSCycle", "Cycle")
                        .WithMany("CycleDetails")
                        .HasForeignKey("CycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pms360.Domain.Entities.PMSAssessor", null)
                        .WithMany("PMSCycleDetails")
                        .HasForeignKey("PMSAssessorAssessorId");

                    b.Navigation("Cycle");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.PMSCycleDetailsWithCriteriaMapping", b =>
                {
                    b.HasOne("Pms360.Domain.Entities.EvaluationCriteria", "Criteria")
                        .WithMany()
                        .HasForeignKey("CriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pms360.Domain.Entities.PMSCycleDetails", "CycleDetails")
                        .WithMany("CriteriaMappings")
                        .HasForeignKey("CycleDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Criteria");

                    b.Navigation("CycleDetails");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.AssessorType", b =>
                {
                    b.Navigation("PMSAssessors");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.EvaluationCriteria", b =>
                {
                    b.Navigation("CriteriaScales");

                    b.Navigation("Responses");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.PMSAssessor", b =>
                {
                    b.Navigation("EvaluationResponses");

                    b.Navigation("PMSCycleDetails");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.PMSCycle", b =>
                {
                    b.Navigation("Assessors");

                    b.Navigation("CycleDetails");

                    b.Navigation("EvaluationSummaries");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.PMSCycleDetails", b =>
                {
                    b.Navigation("CriteriaMappings");

                    b.Navigation("PMSAssessorDetails");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.PMSDurationType", b =>
                {
                    b.Navigation("PMSCycles");
                });

            modelBuilder.Entity("Pms360.Domain.Entities.PMSType", b =>
                {
                    b.Navigation("PMSCycles");
                });
#pragma warning restore 612, 618
        }
    }
}
